<!DOCTYPE html>
<html>
<head>
  <title>YouTube Comment Judol Remover</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      overflow-x: hidden;
    }

    /* Animated background particles */
    .particles {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      opacity: 0.1;
    }

    .particle {
      position: absolute;
      width: 4px;
      height: 4px;
      background: white;
      border-radius: 50%;
      animation: float 6s ease-in-out infinite;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(180deg); }
    }

    .back-btn {
      position: absolute;
      top: 20px;
      left: 30px;
      color: #fff;
      font-size: 1.5rem;
      z-index: 1060;
      text-decoration: none;
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.1);
      padding: 12px 15px;
      border-radius: 50px;
      backdrop-filter: blur(10px);
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .back-btn:hover { 
      color: #fff; 
      background: rgba(255, 255, 255, 0.2);
      transform: scale(1.05);
    }

    .main-container {
      position: relative;
      z-index: 1;
    }

    .glass-card {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border-radius: 20px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
      padding: 2rem;
      margin: 2rem auto;
      max-width: 800px;
      animation: slideUp 0.8s ease-out;
    }

    @keyframes slideUp {
      from {
        opacity: 0;
        transform: translateY(50px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .page-title {
      background: linear-gradient(45deg, #fff, #f0f0f0);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      font-weight: 700;
      font-size: 2.5rem;
      margin-bottom: 1rem;
      text-align: center;
      animation: glow 2s ease-in-out infinite alternate;
    }

    @keyframes glow {
      from { text-shadow: 0 0 20px rgba(255, 255, 255, 0.5); }
      to { text-shadow: 0 0 30px rgba(255, 255, 255, 0.8), 0 0 40px rgba(255, 255, 255, 0.6); }
    }

    .subtitle {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.2rem;
      text-align: center;
      margin-bottom: 2rem;
      animation: fadeIn 1s ease-in 0.5s both;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .form-container {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 15px;
      padding: 2rem;
      margin-top: 2rem;
      border: 1px solid rgba(255, 255, 255, 0.1);
      animation: slideIn 0.6s ease-out;
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateX(-50px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .form-control {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.3);
      color: white;
      border-radius: 10px;
      padding: 15px 20px;
      font-size: 1.1rem;
      transition: all 0.3s ease;
    }

    .form-control:focus {
      background: rgba(255, 255, 255, 0.2);
      border-color: rgba(255, 255, 255, 0.5);
      box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
      color: white;
    }

    .form-control::placeholder {
      color: rgba(255, 255, 255, 0.7);
    }

    .submit-btn {
      background: linear-gradient(45deg, #ff6b6b, #ee5a24);
      border: none;
      color: white;
      padding: 15px 30px;
      font-size: 1.1rem;
      font-weight: 600;
      border-radius: 50px;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
      width: 100%;
      margin-top: 1rem;
    }

    .submit-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
      transition: left 0.5s;
    }

    .submit-btn:hover::before {
      left: 100%;
    }

    .submit-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 20px rgba(255, 107, 107, 0.4);
    }

    .checkbox-container {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 10px;
      padding: 1rem;
      margin: 1rem 0;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .checkbox-label {
      color: rgba(255, 255, 255, 0.9);
      font-weight: 500;
      font-size: 1.1rem;
    }

    .form-check-input:checked {
      background-color: #ff6b6b;
      border-color: #ff6b6b;
    }

    .comments-section {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      border-radius: 15px;
      padding: 2rem;
      margin-top: 2rem;
      animation: fadeInUp 0.8s ease-out;
    }

    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .spam-alert {
      background: linear-gradient(45deg, #e74c3c, #c0392b);
      color: white;
      padding: 1.5rem;
      border-radius: 10px;
      margin-bottom: 2rem;
      font-size: 1.5rem;
      font-weight: 700;
      text-align: center;
      animation: shake 0.5s ease-in-out;
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      25% { transform: translateX(-5px); }
      75% { transform: translateX(5px); }
    }

    .list-group-item {
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      color: white;
      margin-bottom: 0.5rem;
      border-radius: 10px;
      transition: all 0.3s ease;
    }

    .list-group-item:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateX(5px);
    }

    .badge {
      animation: blink 1s infinite;
    }

    @keyframes blink {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }

    .delete-btn {
      background: linear-gradient(45deg, #e74c3c, #c0392b);
      border: none;
      color: white;
      padding: 12px 25px;
      font-weight: 600;
      border-radius: 10px;
      transition: all 0.3s ease;
    }

    .delete-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(231, 76, 60, 0.4);
    }

    .info-card {
      background: rgba(255, 255, 255, 0.05);
      border-radius: 10px;
      padding: 1.5rem;
      margin-bottom: 2rem;
      border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .info-card h5 {
      color: #fff;
      margin-bottom: 1rem;
    }

    .info-card p {
      color: rgba(255, 255, 255, 0.8);
      margin-bottom: 0.5rem;
    }

    .loading {
      display: none;
      text-align: center;
      color: white;
      padding: 2rem;
    }

    .spinner {
      border: 4px solid rgba(255, 255, 255, 0.3);
      border-radius: 50%;
      border-top: 4px solid #fff;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 0 auto 1rem;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    /* Responsive */
    @media (max-width: 768px) {
      .page-title {
        font-size: 2rem;
      }
      
      .glass-card {
        margin: 1rem;
        padding: 1.5rem;
      }

      .back-btn {
        left: 15px;
        top: 15px;
        font-size: 1.2rem;
        padding: 10px 12px;
      }
    }
  </style>
</head>
<body>
  <!-- Animated particles background -->
  <div class="particles" id="particles"></div>

  <!-- Back to dashboard button -->
  <a href="/" class="back-btn">
    <i class="bi bi-arrow-left"></i> Dashboard
  </a>

  <div class="container py-5 main-container">
    <div class="glass-card">
      <h1 class="page-title">
        <i class="bi bi-youtube"></i> YouTube Comment Judol Remover
      </h1>
      <p class="subtitle">
        Deteksi dan hapus komentar spam/judol dari video YouTube Anda
      </p>

      <div class="info-card">
        <h5><i class="bi bi-info-circle"></i> Cara Menggunakan:</h5>
        <p>1. Masukkan link video YouTube yang ingin Anda bersihkan</p>
        <p>2. Aktifkan AI Judol Detector untuk deteksi otomatis</p>
        <p>3. Pilih komentar yang ingin dihapus</p>
        <p>4. Klik tombol hapus untuk membersihkan komentar</p>
      </div>

      <div class="form-container">
        <form action="/get-comments" method="POST" id="commentForm">
          <div class="mb-4">
            <label for="youtubeUrl" class="form-label" style="color: white; font-weight: 600;">
              <i class="bi bi-link-45deg"></i> Link Video YouTube
            </label>
            <input type="url" name="youtubeUrl" id="youtubeUrl" class="form-control" 
                   placeholder="https://www.youtube.com/watch?v=..." required>
          </div>
          
          <div class="checkbox-container">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" name="useAiJudol" value="1" id="useAiJudol" checked>
              <label class="form-check-label checkbox-label" for="useAiJudol">
                <i class="bi bi-robot"></i> Gunakan AI Judol Detector
              </label>
            </div>
            <small style="color: rgba(255, 255, 255, 0.7);">
              AI akan otomatis mendeteksi komentar spam dan judol
            </small>
          </div>

          <button type="submit" class="submit-btn">
            <i class="bi bi-search"></i> Analisis Komentar
          </button>
        </form>

        <div class="loading" id="loadingDiv">
          <div class="spinner"></div>
          <p>Sedang menganalisis komentar...</p>
        </div>
      </div>
    </div>

    <!-- Comments section will be populated here -->
    <div id="commentsSection" style="display: none;">
      <div class="comments-section">
        <h4 class="text-white mb-4">
          <i class="bi bi-chat-dots"></i> Hasil Analisis Komentar
        </h4>
        <div class="spam-alert" id="spamAlert">
          🚨 Ditemukan <span id="spamCount">0</span> komentar spam
        </div>
        <form action="/delete-comments" method="POST" id="deleteForm">
          <div class="mb-3 text-start">
            <input type="checkbox" id="selectAll" class="form-check-input">
            <label for="selectAll" class="form-check-label checkbox-label ms-2">
              <i class="bi bi-check2-all"></i> Pilih Semua
            </label>
          </div>
          <div class="list-group" id="commentsList">
            <!-- Comments will be populated here -->
          </div>
          <div class="d-flex gap-3 mt-3">
            <button type="submit" class="delete-btn">
              <i class="bi bi-trash"></i> Hapus Komentar Terpilih
            </button>
            <button type="button" class="btn btn-secondary" onclick="startOver()">
              <i class="bi bi-arrow-clockwise"></i> Analisis Ulang
            </button>
          </div>
        </form>
      </div>
    </div>
    
    <!-- Spacer untuk memberikan jarak dengan footer -->
    <div style="height: 100px;"></div>
  </div>

  <script>
    // Create animated particles
    function createParticles() {
      const particles = document.getElementById('particles');
      for (let i = 0; i < 50; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + '%';
        particle.style.top = Math.random() * 100 + '%';
        particle.style.animationDelay = Math.random() * 6 + 's';
        particles.appendChild(particle);
      }
    }

    // Initialize particles
    createParticles();

    // Form submission handling
    document.getElementById('commentForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Show loading
      document.getElementById('loadingDiv').style.display = 'block';
      document.querySelector('.submit-btn').disabled = true;
      
      // Simulate API call (replace with actual form submission)
      setTimeout(() => {
        // Hide loading
        document.getElementById('loadingDiv').style.display = 'none';
        document.querySelector('.submit-btn').disabled = false;
        
        // Show mock results
        showMockResults();
      }, 3000);
    });

    // Mock results for demonstration
    function showMockResults() {
      const mockComments = [
        { id: 1, text: "First comment! Subscribe to my channel!", isSpam: true },
        { id: 2, text: "Great video! Thanks for sharing", isSpam: false },
        { id: 3, text: "Check out my latest video! Link in bio", isSpam: true },
        { id: 4, text: "This is very helpful, thank you!", isSpam: false },
        { id: 5, text: "SUBSCRIBE FOR SUBSCRIBE! DM ME", isSpam: true }
      ];

      const spamCount = mockComments.filter(c => c.isSpam).length;
      document.getElementById('spamCount').textContent = spamCount;
      
      const commentsList = document.getElementById('commentsList');
      commentsList.innerHTML = '';
      
      mockComments.forEach((comment, idx) => {
        const commentElement = document.createElement('div');
        commentElement.className = 'list-group-item d-flex justify-content-between align-items-center';
        commentElement.innerHTML = `
          <div class="form-check">
            <input class="form-check-input comment-checkbox" type="checkbox" name="commentId" value="${comment.id}" id="comment${idx}" ${comment.isSpam ? 'checked' : ''}>
            <label class="form-check-label ms-2" for="comment${idx}">${comment.text}</label>
          </div>
          ${comment.isSpam ? '<span class="badge bg-danger">Spam</span>' : ''}
        `;
        commentsList.appendChild(commentElement);
      });
      
      document.getElementById('commentsSection').style.display = 'block';
      document.getElementById('commentsSection').scrollIntoView({ behavior: 'smooth' });
    }

    // Select all checkbox functionality
    document.addEventListener('change', function(e) {
      if (e.target.id === 'selectAll') {
        const checkboxes = document.querySelectorAll('.comment-checkbox');
        checkboxes.forEach(cb => cb.checked = e.target.checked);
      }
    });

    // Start over function
    function startOver() {
      document.getElementById('commentsSection').style.display = 'none';
      document.getElementById('youtubeUrl').value = '';
      document.getElementById('youtubeUrl').focus();
    }

    // Add entrance animation to elements
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.style.animationDelay = '0s';
          entry.target.style.animationPlayState = 'running';
        }
      });
    });

    document.querySelectorAll('.glass-card, .comments-section').forEach(el => {
      observer.observe(el);
    });
  </script>
</body>
</html>